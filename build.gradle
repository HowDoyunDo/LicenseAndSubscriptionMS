plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	//
	id 'com.moowork.node' version '1.3.1'
	id 'java'
}

//
node {
	version = '12.13.1'
	npmVersion = '6.12.1'
	workDir = file("./src/frontend")
	npmWorkDir = file("./src/frontend")
	nodeModulesDir = file("./src/frontend")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//mabatis및 postgresql의존성 주입을 위한 gradle
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
	// jwt dependencies에 추가
	compile 'io.jsonwebtoken:jjwt-api:0.10.5'
	runtime 'io.jsonwebtoken:jjwt-impl:0.10.5'
	runtime 'io.jsonwebtoken:jjwt-jackson:0.10.5'
	// email 인증 api
	compile("org.springframework.boot:spring-boot-starter-mail")
	compile "org.springframework:spring-context-support"
	compile "com.sun.mail:javax.mail"
	compile group: 'com.github.ckpoint', name: 'toexcel', version: '1.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-security'
}

//
task setUp(type: NpmTask) {
	description = "install Node.js packages"
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('node_modules')
}

//
task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
	description = "Build vue.js"
	args = ['run', 'build']
}

//
processResources.dependsOn 'buildFrontEnd'

test {
	useJUnitPlatform()
}
